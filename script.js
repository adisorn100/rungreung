const SPREADSHEET_ID = "1FTir6myrkrU1KP7AyqRaKaQiKmX2jKIx4iKVx28QM0w"; // ‡πÉ‡∏™‡πà Sheet ID
const SHEET_NAME = "‡∏ä‡∏µ‡∏ï1"; // ‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡∏µ‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const TOKEN_URL = "https://script.google.com/macros/s/AKfycby3W1ArMO5Gyz_7WTeayqNYMyUYZF0d9nhps8XcviHj6fw_so6MLQG4DquWurA88KxVGQ/exec"; // üî• ‡πÉ‡∏™‡πà URL ‡∏Ç‡∏≠‡∏á Apps Script

// ‚úÖ ‡∏î‡∏∂‡∏á Access Token ‡∏à‡∏≤‡∏Å Google Apps Script
async function getAccessToken() {
    const response = await fetch(TOKEN_URL);
    const token = await response.text();
    return token;
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Sheets
async function sendData() {
    const accessToken = await getAccessToken();
    if (!accessToken) return;

    const API_URL = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${SHEET_NAME}!A:G:append?valueInputOption=RAW`;

    fetch(API_URL, {
        method: "POST",
        body: JSON.stringify({
            values: [[
                new Date().toLocaleString('th-TH'),
                document.getElementById("fn").value,
                document.getElementById("tl").value,
                document.getElementById("rm").value,
                document.getElementById("am").value,
                "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£",
                ""
            ]]
        }),
        headers: {
            "Authorization": `Bearer ${accessToken}`,
            "Content-Type": "application/json"
        }
    })
    .then(res => res.json())
    .then(response => {
        Swal.fire({
            icon: 'success',
            title: '‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß',
            timer: 2000
        });
        document.querySelector("form").reset();
    })
    .catch(error => {
        console.error("‚ùå Error:", error);
    });
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets
async function searchData() {
    const keyword = document.getElementById("keyword").value.trim();
    const result = document.getElementById("result");
    const accessToken = await getAccessToken();
    if (!accessToken) return;

    result.innerHTML = "üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...";

    const API_URL = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${SHEET_NAME}!A:G`;

    fetch(API_URL, {
        method: "GET",
        headers: {
            "Authorization": `Bearer ${accessToken}`,
            "Content-Type": "application/json"
        }
    })
    .then(res => res.json())
    .then(data => {
        console.log("üìå Data from API:", data);
        const rows = data.values || [];

        const filteredRows = rows.filter(row =>
            row.slice(1, 4).some(cell => (cell || "").toLowerCase().includes(keyword.toLowerCase()))
        );

        if (filteredRows.length === 0) {
            result.innerHTML = `<div class="alert alert-warning">‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>`;
            return;
        }

        let html = `<table class="table table-striped"><thead><tr>
                        <th>‡∏ä‡∏∑‡πà‡∏≠</th><th>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</th><th>‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</th><th>‡∏≠‡∏≤‡∏Å‡∏≤‡∏£</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th><th>‡∏ú‡∏π‡πâ‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô</th><th>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï</th>
                    </tr></thead><tbody>`;

        filteredRows.forEach((row, index) => {
            html += `<tr>
                        <td>${row[1] || "-"}</td>
                        <td>${row[2] || "-"}</td>
                        <td>${row[3] || "-"}</td>
                        <td>${row[4] || "-"}</td>
                        <td>${row[5] || "-"}</td>
                        <td>${row[6] || "-"}</td>
                        <td>
                            <button class="btn btn-success btn-sm" onclick="updateStatus(${index + 1}, prompt('‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô'))">‚úÖ ‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô</button>
                        </td>
                    </tr>`;
        });

        html += `</tbody></table>`;
        result.innerHTML = html;
    })
    .catch(error => {
        console.error("‚ùå Error:", error);
        result.innerHTML = `<div class="alert alert-danger">‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</div>`;
    });
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô" ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô
async function updateStatus(rowNumber, staffName) {
    if (!staffName) return;
    const accessToken = await getAccessToken();
    if (!accessToken) return;

    const API_URL = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${SHEET_NAME}!F${rowNumber + 1}:G${rowNumber + 1}?valueInputOption=USER_ENTERED`;

    fetch(API_URL, {
        method: "PUT",
        body: JSON.stringify({
            values: [["‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", staffName]]
        }),
        headers: {
            "Authorization": `Bearer ${accessToken}`,
            "Content-Type": "application/json"
        }
    })
    .then(res => res.json())
    .then(response => {
        Swal.fire({
            icon: 'success',
            title: 'üìå ‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß',
            timer: 2000
        });
        searchData(); // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    })
    .catch(error => {
        console.error("‚ùå Error:", error);
    });
}

	// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Export ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô Excel
async function exportToExcel() {
    const accessToken = await getAccessToken();
    if (!accessToken) return;

    const API_URL = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${SHEET_NAME}!A:G`;

    fetch(API_URL, {
        method: "GET",
        headers: {
            "Authorization": `Bearer ${accessToken}`,
            "Content-Type": "application/json"
        }
    })
    .then(res => res.json())
    .then(data => {
        const rows = data.values || [];

        if (rows.length === 0) {
            Swal.fire({
                icon: "warning",
                title: "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
                text: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î"
            });
            return;
        }

        // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Excel
        let ws = XLSX.utils.aoa_to_sheet(rows);
        let wb = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(wb, ws, "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°");

        // ‚úÖ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
        XLSX.writeFile(wb, "repair_data.xlsx");
    })
    .catch(error => {
        console.error("‚ùå Error exporting data:", error);
        Swal.fire({
            icon: "error",
            title: "‚ùå ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß",
            text: "‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå"
        });
    });
}


